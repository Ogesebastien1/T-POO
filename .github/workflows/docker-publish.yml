name: publish

on:
  push:
    branches: ['setup/deployment']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ogesebastien1/timemanager:latest 

jobs:
  publish:
    name: publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: login
        run: |
          echo ${{ secrets.GH_SECRET }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Publish
        run: |
            # Vérifier si le répertoire Client existe
            ls -l ./Client
        
            # Vérifier si le Dockerfile existe dans le répertoire Client
            ls -l ./Client/Dockerfile
        
            # Construction et publication de l'image
            docker build ./Client --tag ghcr.io/ogesebastien1/timemanager-client:latest
            docker push ghcr.io/ogesebastien1/timemanager-client:latest

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: | 
            mkdir -p ~/.ssh/
            echo "$SSH_KEY" > ~/.ssh/staging.key
            chmod 600 ~/.ssh/staging.key
            cat >>~/.ssh/config <<END
            Host staging
                HostName ${{ secrets.SSH_HOST }}
                User ${{ secrets.SSH_USER }}
                IdentityFile ~/.ssh/staging.key
                StrictHostKeyChecking no
            END
      - name: connect and pull
        run: ssh -p ${{ secrets.SSH_PORT }} staging "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d"
      - name: cleanup
        run: rm -rf ~/.ssh