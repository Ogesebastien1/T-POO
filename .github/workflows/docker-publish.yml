name: publish

on:
  push:
    branches: ['setup/deployment']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ogesebastien1/timemanager:latest 

jobs:
  publish:
    name: publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: login
        run: |
          echo ${{ secrets.GH_SECRET }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Publish
        run: |
          # Vérifier si le répertoire Client existe
          ls -l ./Client
        
          # Vérifier si le Dockerfile existe dans le répertoire Client
          ls -l ./Client/Dockerfile
        
          # Construction et publication de l'image
          docker build ./Client --tag ghcr.io/ogesebastien1/timemanager-client:latest
          docker push ghcr.io/ogesebastien1/timemanager-client:latest

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: | 
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          cat >>/home/runner/.ssh/config <<END
            Host vps
                HostName ${{ secrets.SSH_HOST }}
                User ${{ secrets.SSH_USER }}
                Port ${{ secrets.SSH_PORT }}
                IdentityFile $HOME/.ssh/id_rsa
                StrictHostKeyChecking no
            END
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> /home/runner/.ssh/known_hosts

      - name: connect and pull
        run: ssh vps "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d"
      - name: cleanup
        run: rm -rf ~/.ssh